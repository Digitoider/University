//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstructorService.AdminServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminServiceReference.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetLeranersBy", ReplyAction="http://tempuri.org/IAdminService/GetLeranersByResponse")]
        SportSchoolClassLibrary.Learner[] GetLeranersBy(int section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetLeranersBy", ReplyAction="http://tempuri.org/IAdminService/GetLeranersByResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner[]> GetLeranersByAsync(int section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetInstructorsBy", ReplyAction="http://tempuri.org/IAdminService/GetInstructorsByResponse")]
        SportSchoolClassLibrary.Instructor[] GetInstructorsBy(int section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetInstructorsBy", ReplyAction="http://tempuri.org/IAdminService/GetInstructorsByResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Instructor[]> GetInstructorsByAsync(int section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertNewInstructor", ReplyAction="http://tempuri.org/IAdminService/InsertNewInstructorResponse")]
        void InsertNewInstructor(SportSchoolClassLibrary.Instructor instructor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertNewInstructor", ReplyAction="http://tempuri.org/IAdminService/InsertNewInstructorResponse")]
        System.Threading.Tasks.Task InsertNewInstructorAsync(SportSchoolClassLibrary.Instructor instructor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertNewLearner", ReplyAction="http://tempuri.org/IAdminService/InsertNewLearnerResponse")]
        void InsertNewLearner(SportSchoolClassLibrary.Learner learner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertNewLearner", ReplyAction="http://tempuri.org/IAdminService/InsertNewLearnerResponse")]
        System.Threading.Tasks.Task InsertNewLearnerAsync(SportSchoolClassLibrary.Learner learner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSectionID", ReplyAction="http://tempuri.org/IAdminService/GetSectionIDResponse")]
        int GetSectionID(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSectionID", ReplyAction="http://tempuri.org/IAdminService/GetSectionIDResponse")]
        System.Threading.Tasks.Task<int> GetSectionIDAsync(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSections", ReplyAction="http://tempuri.org/IAdminService/GetSectionsResponse")]
        SportSchoolClassLibrary.Section[] GetSections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSections", ReplyAction="http://tempuri.org/IAdminService/GetSectionsResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Section[]> GetSectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EmailExists", ReplyAction="http://tempuri.org/IAdminService/EmailExistsResponse")]
        bool EmailExists(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EmailExists", ReplyAction="http://tempuri.org/IAdminService/EmailExistsResponse")]
        System.Threading.Tasks.Task<bool> EmailExistsAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SectionExists", ReplyAction="http://tempuri.org/IAdminService/SectionExistsResponse")]
        bool SectionExists(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SectionExists", ReplyAction="http://tempuri.org/IAdminService/SectionExistsResponse")]
        System.Threading.Tasks.Task<bool> SectionExistsAsync(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertSection", ReplyAction="http://tempuri.org/IAdminService/InsertSectionResponse")]
        void InsertSection(SportSchoolClassLibrary.Section section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertSection", ReplyAction="http://tempuri.org/IAdminService/InsertSectionResponse")]
        System.Threading.Tasks.Task InsertSectionAsync(SportSchoolClassLibrary.Section section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetLearnesTimeTable", ReplyAction="http://tempuri.org/IAdminService/GetLearnesTimeTableResponse")]
        SportSchoolClassLibrary.TimeTableRow[] GetLearnesTimeTable(int sectionID, int instructorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetLearnesTimeTable", ReplyAction="http://tempuri.org/IAdminService/GetLearnesTimeTableResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.TimeTableRow[]> GetLearnesTimeTableAsync(int sectionID, int instructorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetOtherLearnesTimeTable", ReplyAction="http://tempuri.org/IAdminService/GetOtherLearnesTimeTableResponse")]
        SportSchoolClassLibrary.TimeTableRow[] GetOtherLearnesTimeTable(int sectionID, int instructorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetOtherLearnesTimeTable", ReplyAction="http://tempuri.org/IAdminService/GetOtherLearnesTimeTableResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.TimeTableRow[]> GetOtherLearnesTimeTableAsync(int sectionID, int instructorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetLearner", ReplyAction="http://tempuri.org/IAdminService/GetLearnerResponse")]
        SportSchoolClassLibrary.Learner GetLearner(int learnerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetLearner", ReplyAction="http://tempuri.org/IAdminService/GetLearnerResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner> GetLearnerAsync(int learnerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/ChangeLearnersTimeTable", ReplyAction="http://tempuri.org/IAdminService/ChangeLearnersTimeTableResponse")]
        void ChangeLearnersTimeTable(SportSchoolClassLibrary.TimeTableRow[] rows, int sectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/ChangeLearnersTimeTable", ReplyAction="http://tempuri.org/IAdminService/ChangeLearnersTimeTableResponse")]
        System.Threading.Tasks.Task ChangeLearnersTimeTableAsync(SportSchoolClassLibrary.TimeTableRow[] rows, int sectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/FreeLearners", ReplyAction="http://tempuri.org/IAdminService/FreeLearnersResponse")]
        void FreeLearners(int[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/FreeLearners", ReplyAction="http://tempuri.org/IAdminService/FreeLearnersResponse")]
        System.Threading.Tasks.Task FreeLearnersAsync(int[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertIntoInstructorsTimeTable", ReplyAction="http://tempuri.org/IAdminService/InsertIntoInstructorsTimeTableResponse")]
        void InsertIntoInstructorsTimeTable(SportSchoolClassLibrary.TimeTableRow[] rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertIntoInstructorsTimeTable", ReplyAction="http://tempuri.org/IAdminService/InsertIntoInstructorsTimeTableResponse")]
        System.Threading.Tasks.Task InsertIntoInstructorsTimeTableAsync(SportSchoolClassLibrary.TimeTableRow[] rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteFromInstructorsTimeTable", ReplyAction="http://tempuri.org/IAdminService/DeleteFromInstructorsTimeTableResponse")]
        void DeleteFromInstructorsTimeTable(SportSchoolClassLibrary.TimeTableRow[] rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteFromInstructorsTimeTable", ReplyAction="http://tempuri.org/IAdminService/DeleteFromInstructorsTimeTableResponse")]
        System.Threading.Tasks.Task DeleteFromInstructorsTimeTableAsync(SportSchoolClassLibrary.TimeTableRow[] rows);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : InstructorService.AdminServiceReference.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<InstructorService.AdminServiceReference.IAdminService>, InstructorService.AdminServiceReference.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SportSchoolClassLibrary.Learner[] GetLeranersBy(int section) {
            return base.Channel.GetLeranersBy(section);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner[]> GetLeranersByAsync(int section) {
            return base.Channel.GetLeranersByAsync(section);
        }
        
        public SportSchoolClassLibrary.Instructor[] GetInstructorsBy(int section) {
            return base.Channel.GetInstructorsBy(section);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Instructor[]> GetInstructorsByAsync(int section) {
            return base.Channel.GetInstructorsByAsync(section);
        }
        
        public void InsertNewInstructor(SportSchoolClassLibrary.Instructor instructor) {
            base.Channel.InsertNewInstructor(instructor);
        }
        
        public System.Threading.Tasks.Task InsertNewInstructorAsync(SportSchoolClassLibrary.Instructor instructor) {
            return base.Channel.InsertNewInstructorAsync(instructor);
        }
        
        public void InsertNewLearner(SportSchoolClassLibrary.Learner learner) {
            base.Channel.InsertNewLearner(learner);
        }
        
        public System.Threading.Tasks.Task InsertNewLearnerAsync(SportSchoolClassLibrary.Learner learner) {
            return base.Channel.InsertNewLearnerAsync(learner);
        }
        
        public int GetSectionID(string section) {
            return base.Channel.GetSectionID(section);
        }
        
        public System.Threading.Tasks.Task<int> GetSectionIDAsync(string section) {
            return base.Channel.GetSectionIDAsync(section);
        }
        
        public SportSchoolClassLibrary.Section[] GetSections() {
            return base.Channel.GetSections();
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Section[]> GetSectionsAsync() {
            return base.Channel.GetSectionsAsync();
        }
        
        public bool EmailExists(string email) {
            return base.Channel.EmailExists(email);
        }
        
        public System.Threading.Tasks.Task<bool> EmailExistsAsync(string email) {
            return base.Channel.EmailExistsAsync(email);
        }
        
        public bool SectionExists(string section) {
            return base.Channel.SectionExists(section);
        }
        
        public System.Threading.Tasks.Task<bool> SectionExistsAsync(string section) {
            return base.Channel.SectionExistsAsync(section);
        }
        
        public void InsertSection(SportSchoolClassLibrary.Section section) {
            base.Channel.InsertSection(section);
        }
        
        public System.Threading.Tasks.Task InsertSectionAsync(SportSchoolClassLibrary.Section section) {
            return base.Channel.InsertSectionAsync(section);
        }
        
        public SportSchoolClassLibrary.TimeTableRow[] GetLearnesTimeTable(int sectionID, int instructorID) {
            return base.Channel.GetLearnesTimeTable(sectionID, instructorID);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.TimeTableRow[]> GetLearnesTimeTableAsync(int sectionID, int instructorID) {
            return base.Channel.GetLearnesTimeTableAsync(sectionID, instructorID);
        }
        
        public SportSchoolClassLibrary.TimeTableRow[] GetOtherLearnesTimeTable(int sectionID, int instructorID) {
            return base.Channel.GetOtherLearnesTimeTable(sectionID, instructorID);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.TimeTableRow[]> GetOtherLearnesTimeTableAsync(int sectionID, int instructorID) {
            return base.Channel.GetOtherLearnesTimeTableAsync(sectionID, instructorID);
        }
        
        public SportSchoolClassLibrary.Learner GetLearner(int learnerID) {
            return base.Channel.GetLearner(learnerID);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner> GetLearnerAsync(int learnerID) {
            return base.Channel.GetLearnerAsync(learnerID);
        }
        
        public void ChangeLearnersTimeTable(SportSchoolClassLibrary.TimeTableRow[] rows, int sectionID) {
            base.Channel.ChangeLearnersTimeTable(rows, sectionID);
        }
        
        public System.Threading.Tasks.Task ChangeLearnersTimeTableAsync(SportSchoolClassLibrary.TimeTableRow[] rows, int sectionID) {
            return base.Channel.ChangeLearnersTimeTableAsync(rows, sectionID);
        }
        
        public void FreeLearners(int[] list) {
            base.Channel.FreeLearners(list);
        }
        
        public System.Threading.Tasks.Task FreeLearnersAsync(int[] list) {
            return base.Channel.FreeLearnersAsync(list);
        }
        
        public void InsertIntoInstructorsTimeTable(SportSchoolClassLibrary.TimeTableRow[] rows) {
            base.Channel.InsertIntoInstructorsTimeTable(rows);
        }
        
        public System.Threading.Tasks.Task InsertIntoInstructorsTimeTableAsync(SportSchoolClassLibrary.TimeTableRow[] rows) {
            return base.Channel.InsertIntoInstructorsTimeTableAsync(rows);
        }
        
        public void DeleteFromInstructorsTimeTable(SportSchoolClassLibrary.TimeTableRow[] rows) {
            base.Channel.DeleteFromInstructorsTimeTable(rows);
        }
        
        public System.Threading.Tasks.Task DeleteFromInstructorsTimeTableAsync(SportSchoolClassLibrary.TimeTableRow[] rows) {
            return base.Channel.DeleteFromInstructorsTimeTableAsync(rows);
        }
    }
}
