//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SportSchool.InstructorServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InstructorServiceReference.IInstructorService")]
    public interface IInstructorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetLearners", ReplyAction="http://tempuri.org/IInstructorService/GetLearnersResponse")]
        SportSchoolClassLibrary.Learner[] GetLearners(string instructorsEmail, int dayOfWeek, int hour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetLearners", ReplyAction="http://tempuri.org/IInstructorService/GetLearnersResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner[]> GetLearnersAsync(string instructorsEmail, int dayOfWeek, int hour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/SaveAttendance", ReplyAction="http://tempuri.org/IInstructorService/SaveAttendanceResponse")]
        void SaveAttendance(SportSchoolClassLibrary.Learner[] learners);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/SaveAttendance", ReplyAction="http://tempuri.org/IInstructorService/SaveAttendanceResponse")]
        System.Threading.Tasks.Task SaveAttendanceAsync(SportSchoolClassLibrary.Learner[] learners);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetInstructor", ReplyAction="http://tempuri.org/IInstructorService/GetInstructorResponse")]
        SportSchoolClassLibrary.Instructor GetInstructor(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetInstructor", ReplyAction="http://tempuri.org/IInstructorService/GetInstructorResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Instructor> GetInstructorAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/AddCompetition", ReplyAction="http://tempuri.org/IInstructorService/AddCompetitionResponse")]
        void AddCompetition(SportSchoolClassLibrary.Competition competition, int[] learnersIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/AddCompetition", ReplyAction="http://tempuri.org/IInstructorService/AddCompetitionResponse")]
        System.Threading.Tasks.Task AddCompetitionAsync(SportSchoolClassLibrary.Competition competition, int[] learnersIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetCompetitions", ReplyAction="http://tempuri.org/IInstructorService/GetCompetitionsResponse")]
        SportSchoolClassLibrary.Competition[] GetCompetitions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetCompetitions", ReplyAction="http://tempuri.org/IInstructorService/GetCompetitionsResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Competition[]> GetCompetitionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetCompetitiors", ReplyAction="http://tempuri.org/IInstructorService/GetCompetitiorsResponse")]
        SportSchoolClassLibrary.Learner[] GetCompetitiors(SportSchoolClassLibrary.Competition competition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetCompetitiors", ReplyAction="http://tempuri.org/IInstructorService/GetCompetitiorsResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner[]> GetCompetitiorsAsync(SportSchoolClassLibrary.Competition competition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetAttendance", ReplyAction="http://tempuri.org/IInstructorService/GetAttendanceResponse")]
        SportSchoolClassLibrary.Attendance[] GetAttendance(int learnerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstructorService/GetAttendance", ReplyAction="http://tempuri.org/IInstructorService/GetAttendanceResponse")]
        System.Threading.Tasks.Task<SportSchoolClassLibrary.Attendance[]> GetAttendanceAsync(int learnerID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInstructorServiceChannel : SportSchool.InstructorServiceReference.IInstructorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InstructorServiceClient : System.ServiceModel.ClientBase<SportSchool.InstructorServiceReference.IInstructorService>, SportSchool.InstructorServiceReference.IInstructorService {
        
        public InstructorServiceClient() {
        }
        
        public InstructorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InstructorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstructorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstructorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SportSchoolClassLibrary.Learner[] GetLearners(string instructorsEmail, int dayOfWeek, int hour) {
            return base.Channel.GetLearners(instructorsEmail, dayOfWeek, hour);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner[]> GetLearnersAsync(string instructorsEmail, int dayOfWeek, int hour) {
            return base.Channel.GetLearnersAsync(instructorsEmail, dayOfWeek, hour);
        }
        
        public void SaveAttendance(SportSchoolClassLibrary.Learner[] learners) {
            base.Channel.SaveAttendance(learners);
        }
        
        public System.Threading.Tasks.Task SaveAttendanceAsync(SportSchoolClassLibrary.Learner[] learners) {
            return base.Channel.SaveAttendanceAsync(learners);
        }
        
        public SportSchoolClassLibrary.Instructor GetInstructor(string email) {
            return base.Channel.GetInstructor(email);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Instructor> GetInstructorAsync(string email) {
            return base.Channel.GetInstructorAsync(email);
        }
        
        public void AddCompetition(SportSchoolClassLibrary.Competition competition, int[] learnersIDs) {
            base.Channel.AddCompetition(competition, learnersIDs);
        }
        
        public System.Threading.Tasks.Task AddCompetitionAsync(SportSchoolClassLibrary.Competition competition, int[] learnersIDs) {
            return base.Channel.AddCompetitionAsync(competition, learnersIDs);
        }
        
        public SportSchoolClassLibrary.Competition[] GetCompetitions() {
            return base.Channel.GetCompetitions();
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Competition[]> GetCompetitionsAsync() {
            return base.Channel.GetCompetitionsAsync();
        }
        
        public SportSchoolClassLibrary.Learner[] GetCompetitiors(SportSchoolClassLibrary.Competition competition) {
            return base.Channel.GetCompetitiors(competition);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Learner[]> GetCompetitiorsAsync(SportSchoolClassLibrary.Competition competition) {
            return base.Channel.GetCompetitiorsAsync(competition);
        }
        
        public SportSchoolClassLibrary.Attendance[] GetAttendance(int learnerID) {
            return base.Channel.GetAttendance(learnerID);
        }
        
        public System.Threading.Tasks.Task<SportSchoolClassLibrary.Attendance[]> GetAttendanceAsync(int learnerID) {
            return base.Channel.GetAttendanceAsync(learnerID);
        }
    }
}
